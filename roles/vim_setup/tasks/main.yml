- name: "🔍 Check if vim is already installed"
  ansible.builtin.command: which vim
  register: vim_check
  ignore_errors: true
  changed_when: false

- name: "📊 Vim installation status"
  ansible.builtin.debug:
    msg: "Vim {{ 'is already installed' if vim_check.rc == 0 else 'needs to be installed' }}"

- name: "📦 Install vim text editor"
  ansible.builtin.package:
    name: vim
    state: present
    update_cache: true
  when: vim_check.rc != 0
  register: vim_install_result

- name: "✅ Vim installation result"
  ansible.builtin.debug:
    msg: "Vim {{ 'installed successfully' if vim_install_result.changed else 'was already installed' }}"

- name: "📁 Create .vim directory structure"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ NEW_USER }}"
    group: admin
  loop:
    - "/home/{{ NEW_USER }}/.vim"
    - "/home/{{ NEW_USER }}/.vim/autoload"
    - "/home/{{ NEW_USER }}/.vim/plugged"
  register: vim_dirs_result

- name: "📂 Directory creation status"
  ansible.builtin.debug:
    msg: "Vim directories created successfully in /home/{{ NEW_USER }}/.vim"

- name: "⬇️ Download VimPlug plugin manager"
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "/home/{{ NEW_USER }}/.vim/autoload/plug.vim"
    owner: "{{ NEW_USER }}"
    group: admin
    mode: '0644'
    timeout: 30
  register: vimplug_download_result

- name: "🔌 VimPlug download status"
  ansible.builtin.debug:
    msg: "VimPlug {{ 'downloaded successfully' if vimplug_download_result.changed else 'already present' }}"

- name: "⚙️ Create custom .vimrc configuration for {{ NEW_USER }}"
  ansible.builtin.template:
    src: vimrc.j2
    dest: "/home/{{ NEW_USER }}/.vimrc"
    owner: "{{ NEW_USER }}"
    group: admin
    mode: '0644'
    backup: true
  register: vimrc_user_result

- name: "🔧 Create system-wide vim configuration"
  ansible.builtin.template:
    src: vimrc.j2
    dest: /etc/vim/vimrc.local
    mode: '0644'
    backup: true
  register: vimrc_system_result

- name: "📝 Vim configuration status"
  ansible.builtin.debug:
    msg: |
      Vim configuration completed:
      - User config (.vimrc): {{ 'created' if vimrc_user_result.changed else 'already exists' }}
      - System config: {{ 'created' if vimrc_system_result.changed else 'already exists' }}

- name: "🔌 Install vim plugins"
  ansible.builtin.shell: |
    vim +PlugInstall +qall
  args:
    creates: "/home/{{ NEW_USER }}/.vim/plugged/gruvbox"
  become_user: "{{ NEW_USER }}"
  environment:
    HOME: "/home/{{ NEW_USER }}"
  register: plugins_install_result
  ignore_errors: true

- name: "🎨 Vim plugins installation status"
  ansible.builtin.debug:
    msg: |
      Vim plugins installation:
      - Status: {{ 'completed successfully' if plugins_install_result.rc == 0 else 'completed with some issues' }}
      - Plugins location: /home/{{ NEW_USER }}/.vim/plugged/